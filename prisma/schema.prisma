// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  username     String        @unique
  email        String        @unique
  password     String
  bidCoins     Int           @default(0)
  bids         Bid[]
  auctions     Auction[]
  transcations Transcation[]
}

model Bid {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  auctionId String
  auction   Auction  @relation(fields: [auctionId], references: [id])
  timeStamp DateTime @default(now())
}

model Auction {
  id                String       @id @default(uuid())
  title             String
  description       String
  startingPrice     Int
  currentHighestBid Int          @default(0)
  category          String
  startingTime      DateTime
  endingTime        DateTime
  isActive          Boolean      @default(false)
  bids              Bid[]
  transcation       Transcation?
  productId         String
  product           Product      @relation(fields: [productId], references: [id])
  userId            String
  user              User         @relation(fields: [userId], references: [id])

  @@unique([productId])
}

model Product {
  id          String   @id @default(uuid())
  title       String
  description String
  imageUrl    String
  auction     Auction?
}

model Transcation {
  id        String  @id @default(uuid())
  amount    Int
  auctionId String
  auction   Auction @relation(fields: [auctionId], references: [id])
  userId    String
  user      User    @relation(fields: [userId], references: [id])

  @@unique([auctionId])
}
